"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function t(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function r(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function o(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?r(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function n(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=function(t){return"object"===e(t)&&!Array.isArray(t)&&null!==t},u=function(e){return!!(e&&e.constructor&&e.call&&e.apply)},c=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,r=u(e)?new e:e;if(r.attributes){var n=i(r.attributes)?r.attributes:r.attributes();return t?o(o({},n),r.variants[t]):n}throw new Error("Every factory needs some sensible defaults. So please implement the attributes method/key on the factory yourself.")},a=function(e,t){if(!e||!i(e))throw new Error("The ".concat(t," needs to return the factory data otherwise ")+"we can't proceed in building/creating the factory.")},f=function(e,t){if(!u(e[t]))throw new Error("The ".concat(t," is not a function. In order to work with hooks, you should ")+"make the ".concat(t," a function."))},l=function(e,t){var r=Object.keys(c(e)),o=["id","createdAt","updatedAt"],n=Object.keys(t).filter((function(e){return!r.includes(e)&&!o.includes(e)}));if(n.length)throw new Error('"'.concat(n.join(", "),'" is/are not defined on the factory itself. ')+"Please add these to the factory to be able to use them and clear this message.")},s=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.as,u=t.skipHooks,s=n(t,["as","skipHooks"]);if(!i(e))throw new Error("Every factory needs to be an object. Please implement this new way of defining your factories to keep using Factory Builder.");l(e,s);var b=c(e,r),y=o(o({},b),s);return e.beforeBuild&&!u&&(f(e,"beforeBuild"),y=e.beforeBuild(y),a(y,"beforeBuild")),e.afterBuild&&!u&&(f(e,"afterBuild"),y=e.afterBuild(y),a(y,"afterBuild")),y},b={build:s,buildList:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return new Array(t).fill().map((function(){return s(e,r)}))},attributesFor:c},y=b.default||b;module.exports=y;
//# sourceMappingURL=factory-builder.js.map
